set(MODULE ${PROJECT_NAME}Gen)

# set(SOURCES_LIB )
# set(NAME_LIB ${MODULE})
# string(REPLACE ".cxx" ".h" HEADERS_LIB "${SOURCES_LIB}")
# add_library(${NAME_LIB} SHARED ${SOURCES_LIB})
# target_include_directories(${NAME_LIB} PUBLIC ${ROOT_INCLUDE_DIR} ${FASTJET_DIR}/include ${PYTHIA8_DIR}/include)
# target_link_libraries(${NAME_LIB} ${PYTHIA8_LDFLAGS} ${FASTJET_LIBS} ${ROOT_LIBRARIES} ${PROJECT_NAME}Util ${PROJECT_NAME}PythiaUtil)
# install(TARGETS ${NAME_LIB} LIBRARY DESTINATION lib)
# install(FILES ${HEADERS_LIB} DESTINATION include/${MODULE})

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")
find_package(HepMC REQUIRED HepMC HepMCfio)
if (HEPMC_FOUND)
	set(SOURCES_EXE pythia_hepmc.cxx)
	set(NAME_EXE ${MODULE}PythiaHepMC)
	add_executable(${NAME_EXE} ${SOURCES_EXE})
	target_include_directories(${NAME_EXE} PUBLIC ${ROOT_INCLUDE_DIR} ${FASTJET_DIR}/include ${PYTHIA8_DIR}/include ${HEPMC_INCLUDE_DIRS})
	target_link_libraries( ${NAME_EXE} ${NAME_LIB} ${HEPMC_LIBRARIES} ${PROJECT_NAME}Util ${PROJECT_NAME}PythiaUtil)
	install(TARGETS ${NAME_EXE} RUNTIME DESTINATION bin)
else()
	message(WARNING "HepMC not found - part of util will not be compiled")
endif()
